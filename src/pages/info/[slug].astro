---
import { getCollection } from "astro:content";
import Layout from "@/layouts/Layout.astro";
import { slide, fade } from "astro:transitions";
import background from "@assets/background.svg";

function getRandomTransition() {
  const transitions = [slide({ duration: "0.4s" }), fade({ duration: "0.4s" })];
  const randomIndex = Math.floor(Math.random() * transitions.length);
  return transitions[randomIndex];
}

export async function getStaticPaths() {
  // Obtiene todos los posts de la colección "info"
  const posts = await getCollection("info");

  // Genera un array con los slugs de los posts
  const paths = posts.map((post: any) => ({
    params: { slug: post.slug },
    props: { post },
  }));

  return paths;
}

const { slug } = Astro.params;
const { post } = Astro.props;

// Obtiene todos los posts de la colección "info"
const posts = await getCollection("info");

if (!post) {
  throw new Error(`Post no encontrado: ${slug}`);
}

const { data, body } = post;

const {img} =data;

console.log(data);

function processMarkdownToHTML(text: String): String {
  return text
    .replace(/\*\*(.*?)\*\*/g, "<strong>$1</strong>") // Convierte **texto** en <strong>texto</strong>
    .replace(/\n/g, "<br>"); // Convierte saltos de línea en <br>
}

// Procesar el texto
const formattedText: String = processMarkdownToHTML(body);

const sanitizeHtml = (html: String): String => {
  return html; // Usa librerías como DOMPurify si necesitas sanitización estricta
};
---

<Layout title={data.title} description={data.description}>
  <main
    style=`background-image: url(${background.src})`
    transition:animate={getRandomTransition()}
  >
   
    <section class="grid grid-cols-1 sm:grid-cols-2 gap-5 p-10">
      <article class="m-5">
        <h1 class="text-4xl sm:text-6xl text-red-500 text-center">{data.title}</h1>
        <p class="p-3 text-center">
          <strong>Fecha:</strong> {data.date.toDateString()}
        </p>
        <p class="prose text-blue-800 p-5 text-center font-bold">
          {data.description}
        </p>
        <div
          class="prose text-justify p-4"
          set:html={sanitizeHtml(formattedText)}
        />
      </article>
      <figure class="flex justify-center items-center sm:items-start m-5">
        {data.img && (
          <img
            src={`../${img}`}
            alt={data.title}
            class="rounded-2xl w-full sm:w-96 sm:h-96 object-cover"
          />
        )}
      </figure>
    </section>
    
  </main>
</Layout>


<script></script>
